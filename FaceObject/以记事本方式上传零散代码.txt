using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
   
    class Program
    {
        static void Main(string[] args)
        {
            //int n1 = 10;
            //int n2 = 20;
            //Test(ref n1,ref n2);
            //Console.WriteLine(n1);
            //Console.WriteLine(n2);
            int a;
            int b;
            bool boo;
            double dd;
            string ss;
            M(out a,out b,out boo,out dd,out ss);
            //Console.WriteLine(a);
            //Console.WriteLine(b);
            //Console.WriteLine(boo);
            //Console.WriteLine(dd);
            //Console.WriteLine(ss);

            Console.ReadKey();
        }
        public static void M(out int a,out int b,out bool bo,out double d,out string s)
        {
            a = 1;
            b = 2;
            d = 3.14;
            bo = true;
            s = "继续努力！";
        }


        public static void Test(ref int n1,ref int n2)
        {
            n1 = n1 - n2;
            n2 = n1 + n2;
            n1 = n2 - n1;
        }

    }

}




using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    class Program
    {
        //委托
        public delegate void MultiDelegate();
        static void Main(string[] args)
        {
            //非静态方法属于对象所有 Program类的实例所有
            MultiDelegate multi =new Program().Dinner;
            multi += Devliery;
            multi();
            Console.ReadKey();

            var obj = new { Name = "张昕阳", Age = 18, Gender = "男", IsJ = false };
        }
        //方法1
        public  void Dinner()
        {
            Console.WriteLine("带一份饭"); 
        }
        //方法2
        public static void Devliery()
        {
            Console.WriteLine("拿一个1-3-5120号码的快递"); 
        }
    }
}

